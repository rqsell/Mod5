{"version":3,"sources":["TheContext.js","api/config.js","api/index.js","components/ShowList.js","components/Home.js","components/AddItems.js","components/404/NotFound.js","components/auth/SignUp.js","components/auth/LogIn.js","components/profile/Profile.js","components/auth/GoogleAuth.js","components/auth/GoogleAuthLogin.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","React","createContext","baseURL","process","REACT_APP_API","console","log","token","window","localStorage","getItem","t","substring","resetHead","headers","Authorization","API","axios","create","withCredentials","actions","getUser","a","get","signUp","user","post","res","setItem","data","logIn","logOut","removeItem","addalist","getList","goal","getListDetails","listid","interceptors","response","use","error","name","NotificationManager","String","message","ShowList","props","list","map","eachname","to","_id","store","showthislist","Home","useState","setStore","setList","e","preventDefault","useEffect","alert","className","onSubmit","style","padding","class","for","onChange","target","value","type","required","id","AddItems","NotFound","SignUp","email","setEmail","password","setPassword","then","setUser","catch","LogIn","Welcome","useContext","TheContext","history","src","imageUrl","alt","onClick","push","Profile","responseGoogle","onResponse","profileObj","googleId","clientId","REACT_APP_GOOGLEID","buttonText","onSuccess","onFailure","cookiePolicy","App","useHistory","Provider","exact","path","render","component","GoogleAuth","GoogleAuthLogin","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d090f415.chunk.js","sourcesContent":["import React from 'react';\n \nconst ThemeContext = React.createContext(null);\n \nexport default ThemeContext;","\nlet baseURL; \nif( process.env.NODE_ENV === 'production' ) {\n  if(process.env.REACT_APP_API){ \n    baseURL = `${process.env.REACT_APP_API}/api` //Netlify \n  } else {\n    baseURL = `/api` //Heroku or 5000 \n  }\n} else {\n  baseURL = `http://localhost:5000/api` //3000\n}\n\nexport default baseURL","import axios from 'axios';\nimport baseURL from './config.js'\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\n\n\nconsole.log(baseURL)\n\nconst token = window.localStorage.getItem('token')\nlet t = token ? token.substring(0,15):null\n\nconsole.log('TOKEN',t, 'NODE_ENV',process.env.NODE_ENV)\n\n\nlet resetHead = () =>  {  \n  return { headers: { Authorization: `Bearer ${window.localStorage.getItem('token')}` } }\n}\n\nconst API = axios.create({ withCredentials: true, baseURL ,  headers: { Authorization: `Bearer ${token}`} } );\n\n\nconst actions = {\n  getUser: async () => {\n    return await API.get(`/user`, resetHead())\n  },\n  signUp: async (user) => {\n    let res = await API.post('/signup', user, resetHead())\n    window.localStorage.setItem('token', res?.data?.token)\n    return res\n  },\n  logIn: async (user) => {\n    let res = await API.post('/login', user, resetHead())\n    window.localStorage.setItem('token', res?.data?.token)\n    return res\n  },\n  logOut: async () => {\n    window.localStorage.removeItem('token')\n    return await API.get('/logout', resetHead())\n  },\n  addalist: async (data) => {\n    return await API.post(\"/AddAList\", data, resetHead());\n  },\n  getList: async (goal) => {\n    return await API.get(\"/GetList\", resetHead());\n  },\n  getListDetails: async (listid) => {\n    return await API.get(`/GetList/${listid}`, resetHead());\n  },\n};\n\nAPI.interceptors.response.use((response) => response, (error) => { \n  console.error(error?.response?.data)\n  if(error?.response?.data.name !== \"JsonWebTokenError\" )\n    NotificationManager.error(String(error?.response?.data.message))\n  else\n    NotificationManager.error(\"Please signup or login\")\n\n})\n\nexport default actions;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nfunction ShowList(props) {\n    console.log(props)\n     const showthislist = () =>{\n      \n      return  props.list?.map( (eachname) =>{\n        return (\n        <div>\n        <Link to={`/list/${eachname._id}`}>\n<h1>{eachname.store}</h1>\n</Link>\n        </div>\n        )\n        }\n        )\n    }\n        return(\n        <div>\n        {showthislist()}\n            \n        </div>\n        )\n\n        }\n\n\nexport default ShowList;","import React, { Component, useState, useEffect } from 'react';\nimport actions from '../api';\nimport ShowList from \"./ShowList\";\n\n\n\nconst Home = (props) => {\n  const [store, setStore] = useState(\"\");\n  const [list, setList] = useState([]);\n\n  useEffect(() => {\n    async function getList() {\n      let res = await actions.getList();\n      if (res) {\n        console.log(res);\n        setList(res.data?.list);\n      } else {\n        { alert(\"Sign your butt in!\") }\n      }\n    }\n    getList();\n  }, []);\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n\n    let res = await actions.addalist({\n      store: store,\n\n    });\n\n  }\n\n  return (\n    <div>\n      <section className=\"tanAddGoal\">\n        <form\n          onSubmit={handleSubmit}\n          style={{ padding: \"80px\" }}\n          class=\"vanillaForm\"\n        >\n          <label for=\"Store\">Store Name</label>\n          <input\n            onChange={(e) => setStore(e.target.value)}\n            type=\"text\"\n            required\n            name=\"Name\"\n          />\n\n          <button id=\"addGoalButton\">Add Goal</button>\n        </form>\n      </section>\n      <ShowList list={list} />\n    </div>\n  )\n}\n\nexport default Home;\n\n\n\n","import React from 'react';\n\nfunction AddItems(props) {\n    return (\n        <div>\n            <section className=\"tanAddGoal\">\n          <form\n            // onSubmit={handleSubmit}\n            style={{ padding: \"80px\" }}\n            class=\"vanillaForm\"\n          >\n            <label for=\"Store\">Item Name</label>\n            <input\n            //   onChange={(e) => setStore(e.target.value)}\n              type=\"text\"\n              required\n              name=\"Name\"\n            />\n            <label for=\"Store\">Quantity</label>\n            <input\n            //   onChange={(e) => setStore(e.target.value)}\n              type=\"text\"\n              required\n              name=\"Name\"\n            />\n            <button id=\"addGoalButton\">Add Item</button>\n          </form>\n          </section>\n        </div>\n    );\n}\n\nexport default AddItems;","import React from 'react';\n\nfunction NotFound() {\n  return (\n    <div>\n      <h2>Not found</h2>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React, {Fragment, useState } from 'react';\nimport actions from '../../api/index'\n\nconst SignUp = (props) => {\n\n    let [email, setEmail] = useState('')\n    let [password, setPassword] = useState('')\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        console.log(email, password)\n        actions.signUp({email, password}).then(user=> {\n            console.log(user.data)\n            props.setUser({...user.data})  \n        }).catch( response => console.error(response));\n\n    }\n\n    return (\n        <Fragment>\n            <h2>SignUP</h2>\n            <form onSubmit={handleSubmit}>\n                <input name=\"email\" type=\"email\" onChange={(e)=>setEmail(e.target.value)} />\n                <input name=\"password\" type=\"password\" onChange={(e)=> setPassword(e.target.value)} />\n                <input type=\"submit\" value=\"Sign Up\"/>\n            </form>\n        </Fragment>        \n    )\n}\n\nexport default SignUp;","import React, { Fragment, useState } from 'react';\nimport actions from '../../api/index'\n\n\nfunction LogIn(props){\n    let [email, setEmail] = useState('')\n    let [password, setPassword] = useState('')\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        console.log(email, password)\n        actions.logIn({email, password}).then(user=> {\n            console.log(user.data)\n            props.setUser({...user.data})  \n        }).catch( response => console.error(response));\n\n    }\n    return (\n        <Fragment>\n            <h2>LogIn</h2>\n            <form onSubmit={handleSubmit}>\n                <input name=\"email\" type=\"email\" onChange={(e)=>setEmail(e.target.value)} />\n                <input name=\"password\" type=\"password\"  onChange={(e)=>setPassword(e.target.value)} />\n                <input type=\"submit\" value=\"Log In\"/>\n            </form>\n        </Fragment>\n    )\n}\n\nexport default LogIn;\n\n","import React from 'react';\nimport TheContext from '../../TheContext'\n\nconst Profile = (props) => {\n    return (\n        <div>\n            Profile Page\n            <Welcome />  {/*'Look ma!  No props!!!'*/}\n        </div>\n    );\n}\n\n\nconst Welcome = () => {\n\n    //With Context I can skip the prop drilling and access the context directly \n    const { user, setUser, history } = React.useContext(TheContext);\n\n    return (\n        <div>Welcome {user?.email} <img src={user?.imageUrl} alt=\"idk\" />\n            <button onClick={() => history.push(\"/\")}>Home</button>\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\";\nimport actions from \"../../api/index\";\nimport { GoogleLogin } from \"react-google-login\";\nconsole.log(process.env, 999)\n\nconst responseGoogle = (props) => {\n  const onResponse = (response) => {\n    console.log(response);\n    const user = {\n      ...response.profileObj,\n      password: response.profileObj?.googleId,\n    };\n    actions\n      .signUp(user)\n      .then((user) => {\n        props.setUser({ ...user?.data });\n      })\n      .catch( response => console.error(response));\n  };\n  return (\n    <GoogleLogin\n      clientId={process.env.REACT_APP_GOOGLEID}\n      buttonText=\"Signup\"\n      onSuccess={onResponse}\n      onFailure={onResponse}\n      cookiePolicy={\"single_host_origin\"}\n    />\n  );\n};\n\nexport default responseGoogle;\n","import React from \"react\";\nimport actions from \"../../api/index\";\nimport { GoogleLogin } from \"react-google-login\";\n\nconst responseGoogle = (props) => {\n  const onResponse = (response) => {\n    console.log(response);\n    const user = {\n      ...response.profileObj,\n      password: response.profileObj?.googleId,\n    };\n    actions\n      .logIn(user)\n      .then((user) => {\n        props.setUser({ ...user?.data });\n      })\n      .catch( response => console.error(response));\n  };\n  return (\n    <GoogleLogin\n      clientId={process.env.REACT_APP_GOOGLEID}\n      buttonText=\"Login\"\n      onSuccess={onResponse}\n      onFailure={onResponse}\n      cookiePolicy={\"single_host_origin\"}\n    />\n  );\n};\n\nexport default responseGoogle;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport { Switch, Route, NavLink, useHistory } from \"react-router-dom\";\nimport TheContext from './TheContext';\nimport Home from \"./components/Home\"\nimport AddItems from \"./components/AddItems\"\nimport NotFound from \"./components/404/NotFound.js\";\nimport SignUp from \"./components/auth/SignUp\";\nimport LogIn from \"./components/auth/LogIn\";\nimport Profile from \"./components/profile/Profile\";\nimport actions from \"./api/index\";\nimport GoogleAuth from \"./components/auth/GoogleAuth\";\nimport GoogleAuthLogin from \"./components/auth/GoogleAuthLogin\";\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\n\nconst App = () => {\n\n  let [user, setUser] = useState(null)\n\n  useEffect(() => {\n    async function getUser() {\n      let user = await actions.getUser();\n      console.log('user is', user)\n      setUser(user?.data)\n    }\n    getUser();\n  }, [])\n\n  const logOut = async () => {\n    let res = await actions.logOut();\n    setUser(null);\n  };\n\n  const history = useHistory();\n\n\n  return (\n    <TheContext.Provider value={{ history, user, setUser }}>\n\n      {user?.email}\n      <nav>\n        <NavLink to=\"/\">Home</NavLink>\n\n        {user ? (\n          <Fragment>\n            <NavLink onClick={logOut} to=\"/\">\n              Log Out\n            </NavLink>\n            <NavLink to=\"/profile\">Profile</NavLink>\n          </Fragment>\n        ) : (\n            <Fragment>\n              <NavLink to=\"/sign-up\">Sign Up</NavLink>\n              <NavLink to=\"/log-in\">Log In</NavLink>\n            </Fragment>\n          )}\n      </nav>\n      <Switch>\n        <Route exact path=\"/\" render={(props) => <Home {...props} />} />\n        <Route\n          exact\n          path=\"/sign-up\"\n          render={(props) => <SignUp {...props} setUser={setUser} />}\n        />\n        <Route\n          exact\n          path=\"/log-in\"\n          render={(props) => <LogIn {...props} setUser={setUser} />}\n        />\n        <Route\n          exact\n          path=\"/profile\"\n          render={(props) => <Profile {...props} />}\n        />\n<Route\n          exact\n          path=\"/list/:listid\"\n          render={(props) => <AddItems {...props} />}\n        />\n        <Route component={NotFound} />\n      </Switch>\n      {!user && <GoogleAuth setUser={setUser} />}\n      {!user && <GoogleAuthLogin setUser={setUser} />}\n\n      <NotificationContainer />\n\n    </TheContext.Provider>\n\n  )\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-notifications/lib/notifications.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n\n    document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}
{"ast":null,"code":"var _jsxFileName = \"/Users/secondary/Desktop/ironhack/Mod5/frontend/src/components/ShowItem.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport actions from '../api';\nimport Modal from \"react-modal\";\nimport TheContext from '../TheContext';\n\nfunction ShowItem(props) {\n  console.log(props);\n  const {\n    user,\n    setUser,\n    history\n  } = React.useContext(TheContext);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [allItems, setAllItems] = useState([]);\n  const [newItem, setNewItem] = useState('');\n  const [quantity, setQuantity] = useState('');\n  const [checked, setChecked] = useState([]);\n  const [id, setId] = useState('');\n  const [index, setIndex] = useState('');\n  console.log(user === null || user === void 0 ? void 0 : user.favorites, checked);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    props.editthisitem({\n      itemName: newItem,\n      quantity: quantity,\n      index,\n      id: id\n    });\n    console.log(\"edit!\");\n    setModalIsOpen(!modalIsOpen);\n  }\n\n  async function edit(each, i) {\n    setModalIsOpen(!modalIsOpen);\n    setId(each._id);\n    setIndex(i);\n  } // Add Favorites\n\n\n  async function handleAddFavorites(checkeditem, checked) {\n    let res = await actions.addFavorites({\n      checkeditem,\n      checked\n    });\n    console.log(res, setUser); //setChecked(res?.data?.favorites);\n    //console.log(checked)\n\n    setUser(res === null || res === void 0 ? void 0 : res.data);\n  }\n\n  setAllItems(props.items);\n\n  const showAllItems = () => {\n    console.log(props);\n    return allItems.map((eachItem, i) => {\n      var _user$favorites;\n\n      console.log(eachItem._id);\n      let isFavorite = false;\n\n      if (user === null || user === void 0 ? void 0 : (_user$favorites = user.favorites) === null || _user$favorites === void 0 ? void 0 : _user$favorites.includes(eachItem._id)) {\n        isFavorite = true;\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"itemDisplay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"itemlist\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }\n      }, eachItem.itemName), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, eachItem.quantity), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"buttons\",\n        onClick: () => edit(eachItem, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 30\n        }\n      }, \"Edit\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"buttons\",\n        onClick: () => props.deleteAnItem(eachItem._id, i),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 30\n        }\n      }, \" Delete\")), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        checked: isFavorite ? true : false,\n        type: \"checkbox\",\n        className: \"checkinput\",\n        onChange: e => {\n          handleAddFavorites(eachItem._id, e.target.checked);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(Modal, {\n        isOpen: modalIsOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        onClick: e => setModalIsOpen(!modalIsOpen),\n        className: \"x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }\n      }, \"x\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          padding: \"80px\"\n        },\n        class: \"vanillaForm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        for: \"Store\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }\n      }, \"Item Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: e => setNewItem(e.target.value),\n        type: \"text\",\n        required: true,\n        name: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        for: \"Store\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }\n      }, \"Quantity\"), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: e => setQuantity(e.target.value),\n        type: \"text\",\n        required: true,\n        name: \"Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        id: \"addGoalButton\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }\n      }, \"Edit Item\"))));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }, showAllItems());\n}\n\nexport default ShowItem;","map":{"version":3,"sources":["/Users/secondary/Desktop/ironhack/Mod5/frontend/src/components/ShowItem.js"],"names":["React","Component","useState","useEffect","actions","Modal","TheContext","ShowItem","props","console","log","user","setUser","history","useContext","modalIsOpen","setModalIsOpen","allItems","setAllItems","newItem","setNewItem","quantity","setQuantity","checked","setChecked","id","setId","index","setIndex","favorites","handleSubmit","e","preventDefault","editthisitem","itemName","edit","each","i","_id","handleAddFavorites","checkeditem","res","addFavorites","data","items","showAllItems","map","eachItem","isFavorite","includes","deleteAnItem","target","padding","value"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport actions from '../api';\nimport Modal from \"react-modal\";\nimport TheContext from '../TheContext'\n\nfunction ShowItem(props) {\n    console.log(props)\n    const { user, setUser, history } = React.useContext(TheContext);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [allItems, setAllItems] = useState([])\n\n    const [newItem, setNewItem] = useState('')\n    const [quantity, setQuantity] = useState('')\n    const [checked, setChecked] = useState([])\n    const [id, setId] = useState('')\n    const [index, setIndex] = useState('')\n\n    console.log(user?.favorites, checked);\n\n\n    async function handleSubmit(e) {\n        e.preventDefault();\n\n\n\n\n        props.editthisitem({\n            itemName: newItem,\n            quantity: quantity,\n            index,\n            id: id,\n        });\n        console.log(\"edit!\")\n        setModalIsOpen(!modalIsOpen);\n\n    }\n    async function edit(each, i) {\n        setModalIsOpen(!modalIsOpen);\n        setId(each._id);\n        setIndex(i);\n    }\n    // Add Favorites\n    async function handleAddFavorites(checkeditem, checked) {\n        let res = await actions.addFavorites({ checkeditem, checked });\n        console.log(res, setUser)\n        //setChecked(res?.data?.favorites);\n        //console.log(checked)\n        setUser(res?.data)\n    }\n\n\n    setAllItems(props.items)\n\n    const showAllItems = () => {\n        console.log(props)\n        return allItems.map((eachItem, i) => {\n            console.log(eachItem._id)\n            let isFavorite = false;\n            if (user?.favorites?.includes(eachItem._id)) {\n                isFavorite = true;\n            }\n\n\n\n\n\n            return (\n\n\n\n\n                <div className=\"itemDisplay\">\n\n                    <ul className=\"itemlist\">\n\n                        <li>{eachItem.itemName}</li>\n                        <li>{eachItem.quantity}</li>\n                        <li ><button className=\"buttons\" onClick={() => edit(eachItem, i)}>Edit</button></li>\n                        <li ><button className=\"buttons\" onClick={() => props.deleteAnItem(eachItem._id, i)}> Delete</button></li>\n                        <li><input checked={isFavorite ? true : false} type=\"checkbox\" className=\"checkinput\" onChange={(e) => {\n                            handleAddFavorites(eachItem._id, e.target.checked)\n                        }} ></input></li>\n\n\n\n                        {/* <span className=\"tick\"></span> */}\n\n                    </ul>\n                    <Modal isOpen={modalIsOpen}>\n                        <div onClick={(e) => setModalIsOpen(!modalIsOpen)} className=\"x\">x</div>\n                        <form\n                            onSubmit={handleSubmit}\n                            style={{ padding: \"80px\" }}\n                            class=\"vanillaForm\"\n                        >\n                            <label for=\"Store\">Item Name</label>\n                            <input\n                                onChange={(e) => setNewItem(e.target.value)}\n                                type=\"text\"\n                                required\n                                name=\"Name\"\n                            />\n                            <label for=\"Store\">Quantity</label>\n                            <input\n                                onChange={(e) => setQuantity(e.target.value)}\n                                type=\"text\"\n                                required\n                                name=\"Name\"\n                            />\n                            <button id=\"addGoalButton\">Edit Item</button>\n\n                        </form>\n                    </Modal>\n\n\n\n                    {/* <li>{eachItem.itemName}</li>\n                    <li>{eachItem.quantity}</li>\n                    <div className=\"buttonbox\">\n                        <button onClick={() => props.deleteAnItem(eachItem._id, i)}> Delete</button>\n                        <button onClick={() => edit(eachItem, i)}>Edit</button>\n                        <Modal isOpen={modalIsOpen}>\n                            <form\n                                onSubmit={handleSubmit}\n                                style={{ padding: \"80px\" }}\n                                class=\"vanillaForm\"\n                            >\n                                <label for=\"Store\">Item Name</label>\n                                <input\n                                    onChange={(e) => setNewItem(e.target.value)}\n                                    type=\"text\"\n                                    required\n                                    name=\"Name\"\n                                />\n                                <label for=\"Store\">Quantity</label>\n                                <input\n                                    onChange={(e) => setQuantity(e.target.value)}\n                                    type=\"text\"\n                                    required\n                                    name=\"Name\"\n                                />\n                                <button id=\"addGoalButton\" >Edit Item</button>\n                            </form>\n                        </Modal>\n                    </div> */}\n                </div>\n\n            )\n        })\n    }\n\n\n    return (\n        <div>{showAllItems()}</div>\n    )\n}\n\nexport default ShowItem\n"]},"metadata":{},"sourceType":"module"}